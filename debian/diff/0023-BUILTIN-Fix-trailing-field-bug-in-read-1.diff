From a0995b2473f7e00479cb7d879fac62e82cbc95f7 Mon Sep 17 00:00:00 2001
From: Herbert Xu <herbert@gondor.apana.org.au>
Date: Wed, 8 Sep 2010 20:23:25 +0800
Subject: [BUILTIN] Fix trailing field bug in read(1)

The new read(1) code fails to handle the last variable correctly if
it happens to be terminated by IFS characters.  Those characters
are included in the last variable but they should not be.

This patch fixes this.

Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
(cherry picked from commit b61ab0b33b4f9ea5fb3663fe8fa0d5fd70e6c166)

Signed-off-by: Jonathan Nieder <jrnieder@gmail.com>
---
 ChangeLog       |    1 +
 src/miscbltin.c |   22 ++++++++++++++--------
 2 files changed, 15 insertions(+), 8 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 6126c1a..4a1f925 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,6 +1,7 @@
 2010-09-08  Herbert Xu <herbert@gondor.apana.org.au>
 
 	* Fix ifsfirst/ifslastp leak.
+	* Fix trailing field bug in read(1).
 
 2010-09-08  maximilian attems <max@stro.at>
 
diff --git a/src/miscbltin.c b/src/miscbltin.c
index c42a01c..653c92f 100644
--- a/src/miscbltin.c
+++ b/src/miscbltin.c
@@ -91,9 +91,20 @@ readcmd_handle_line(char *line, char **ap, size_t len)
 	*arglist.lastp = NULL;
 	ifsfree();
 
-	for (sl = arglist.list; sl; sl = sl->next) {
+	sl = arglist.list;
+
+	do {
+		if (!sl) {
+			/* nullify remaining arguments */
+			do {
+				setvar(*ap, nullstr, 0);
+			} while (*++ap);
+
+			return;
+		}
+
 		/* remaining fields present, but no variables left. */
-		if (!ap[1]) {
+		if (!ap[1] && sl->next) {
 			size_t offset;
 			char *remainder;
 
@@ -110,12 +121,7 @@ readcmd_handle_line(char *line, char **ap, size_t len)
 		/* set variable to field */
 		rmescapes(sl->text);
 		setvar(*ap, sl->text, 0);
-		ap++;
-	}
-
-	/* nullify remaining arguments */
-	do {
-		setvar(*ap, nullstr, 0);
+		sl = sl->next;
 	} while (*++ap);
 }
 
-- 
1.7.4.1

